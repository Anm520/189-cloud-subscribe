name: 构建并发布 Docker 镜像

on:
  workflow_dispatch: # 添加手动触发事件
  push:
    branches:
      - main # 监听 main 分支的推送事件
    paths-ignore:
      - 'README.md' # 忽略 README.md 的更改
      - '.github/workflows/docker-publish.yml' # 忽略此工作流文件的更改
      - 'readme.txt'
      - '.gitignore'
  pull_request:
    branches:
      - main
    paths-ignore:
      - 'README.md' # 忽略 README.md 的更改
      - '.github/workflows/docker-publish.yml' # 忽略此工作流文件的更改
      - 'readme.txt'
      - '.gitignore'
jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      # 检出代码
      # ✅ Step 1: 检出主仓库代码 + 子模块（递归）
      - name: Checkout code with submodules
        uses: actions/checkout@v3
        with:
          submodules: recursive # 自动拉取所有子模块
          fetch-depth: 0        # 获取全部历史，确保 submodule 更新到最新 commit

      # ✅ Step 2: 更新子模块为最新分支提交（可选）
      # 如果你希望子模块也使用最新分支（如 main）而非固定 commit，可以加上以下步骤：
      - name: Update submodules to latest branch
        run: |
          git submodule foreach --recursive git fetch origin
          git submodule foreach --recursive git checkout main  
          git submodule foreach --recursive git pull origin main
      # ✅ Step 3: 安装 Node.js 环境
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'  # 根据你的项目需求调整版本
      # ✅ Step 4: 构建第一个 Vue 子模块（假设路径是 cloud-vue-pc）
      - name: Build Vue PC project
        working-directory: ./189-vue-pc
        run: |
          npm install
          npm run build

      # ✅ Step 5: 构建第二个 Vue 子模块（假设路径是 cloud-vue-mobile）
      - name: Build Vue Mobile project
        working-directory: ./189-vue-h5
        run: |
          npm install
          npm run build

      # 设置 QEMU 以支持多架构构建
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      # 设置 Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # 登录到 Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      # 构建并推送多架构镜像
      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm64 # 支持的架构
          push: true
          tags: |
            ${{ secrets.DOCKER_HUB_USERNAME }}/189-cloud-subscribe:latest
            ${{ secrets.DOCKER_HUB_USERNAME }}/189-cloud-subscribe:1.1.0
